import {z} from "zod";import {CommonMoods} from "@/lib/schema/mood";export const UserMessageSchema = z.object({    role: z.literal('user'),    text: z.string(),});const AssistantMessageSchema = z.object({    role: z.literal('assistant'),    thinking: z.string(),    text: z.string(),    user_mood: z.union([z.enum(CommonMoods), z.string()]),    suggested_questions: z.array(z.string()),    coping_strategies: z.array(z.string()),    debug: z.object({        context_used: z.boolean(),        identified_issue: z.string(),    }),    redirect_to_human: z.object({        should_redirect: z.boolean(),        reason: z.string().optional(),    }).optional(),});export const MessageSchema = z.discriminatedUnion('role', [    UserMessageSchema,    AssistantMessageSchema,]);export const ChatResponseSchema = z.object({    aiResponse: AssistantMessageSchema,    threadId: z.string(),    summary: z.string().optional(),});export type Message = z.infer<typeof MessageSchema>;export type AssistantMessage = z.infer<typeof AssistantMessageSchema>;