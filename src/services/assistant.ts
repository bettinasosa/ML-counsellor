import {SYSTEM_PROMPT} from "@/lib/prompts/system";import Logger from "@/utils/logger";import {OpenAIClient} from "@/lib/openai";import {openAIClient} from "@/lib/openaiClient";class AssistantService {    private assistantId: string | null = null;    constructor() {}    async getOrCreateAssistant(): Promise<string | null> {        if (this.assistantId) {            return this.assistantId;        }        try {            const assistant = await openAIClient.client.beta.assistants.create({                name: 'AI Counselor',                instructions: SYSTEM_PROMPT,                model: 'gpt-4o-mini',                tools: [{ type: 'file_search' }],            });            this.assistantId = assistant.id;            Logger.log(`Assistant created with ID: ${this.assistantId}`);            return this.assistantId;        } catch (error) {            Logger.error('Failed to create assistant', error);            throw new Error('Unable to create assistant');        }    }}export default AssistantService;