import React from "react";import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";import ReactMarkdown from "react-markdown";import rehypeRaw from "rehype-raw";import rehypeHighlight from "rehype-highlight";import { useChatContext } from "@/context/chatContext";import {Message} from "@/lib/schema/messages";import {isLikelyMarkdown} from "@/utils/helpers";export default function MessageList() {    const { messages, isLoading } = useChatContext();    const renderContent = (content: string) => {        if (isLikelyMarkdown(content)) {            try {                return (                    <ReactMarkdown                        rehypePlugins={[rehypeRaw, rehypeHighlight]}                        className="text-sm"                    >                        {content}                    </ReactMarkdown>                );            } catch (error) {                console.error('Error rendering markdown:', error);                return <p className="text-sm whitespace-pre-wrap">{content}</p>;            }        } else {            return <p className="text-sm whitespace-pre-wrap">{content}</p>;        }    };    return (        <>            {messages?.length > 0 ? (                <>                    {messages.map((msg: Message, index: number) => (                        <div key={index} className={`mb-4 ${msg.role === 'user' ? 'text-right' : 'text-left'}`}>                            <div className={`inline-block max-w-[80%] ${msg.role === 'user' ? 'bg-[#786B5E] text-white' : 'bg-white'} rounded-lg p-3 shadow`}>                                <div className='flex space-x-2'>                                    <Avatar>                                        <AvatarImage src="https://github.com/shadcn.pg" alt="@shadcn"/>                                        <AvatarFallback className={'bg-blue-200'}>{msg.role === 'user' ? 'ME' : 'MIA'}</AvatarFallback>                                    </Avatar>                                    <div>                                        <p className={`text-sm ${msg.role === 'user' ? 'text-white' : 'text-[#2A2A2A]'}`}>                                            {renderContent(msg.text)}                                        </p>                                        {msg.role === 'assistant' && (                                            <>                                                {msg?.coping_strategies?.length > 0 && (                                                    <div className="mt-2">                                                        <p className="font-bold">Some tips:</p>                                                        <ul className="list-disc list-inside">                                                            {msg.coping_strategies.map((strategy, sIndex) => (                                                                <li key={sIndex} className="text-sm">{strategy}</li>                                                            ))}                                                        </ul>                                                    </div>                                                )}                                                {msg?.suggested_questions?.length > 0 && (                                                    <div className="mt-2">                                                        <p className="font-bold">Follow up questions:</p>                                                        <ul className="list-disc list-inside">                                                            {msg.suggested_questions.map((question, qIndex) => (                                                                <li key={qIndex} className="text-sm">{question}</li>                                                            ))}                                                        </ul>                                                    </div>                                                )}                                            </>                                        )}                                    </div>                                </div>                            </div>                        </div>                    ))}                </>            ) : (                <div className="text-center text-gray-500">                    How are you feeling today?                </div>            )}            {isLoading && (                <div className="flex justify-start mb-4">                    <div className="bg-white rounded-lg p-3 shadow inline-block">                        <div className="flex items-center space-x-4">                            <Avatar>                                <AvatarFallback className={'bg-blue-200'}>MIA</AvatarFallback>                            </Avatar>                            <div className="flex space-x-2">                                <div className="w-2 h-2 bg-gray-500 rounded-full animate-pulse"></div>                                <div className="w-2 h-2 bg-gray-500 rounded-full animate-pulse delay-75"></div>                                <div className="w-2 h-2 bg-gray-500 rounded-full animate-pulse delay-150"></div>                            </div>                        </div>                    </div>                </div>            )}        </>    );}